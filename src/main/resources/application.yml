###########################################################
# EL POOL:
# Imagina un servicio de alquiler de bicicletas:
#
#   Sin pool: Cada usuario compra una bici nueva y la tira después de usarla (caro e ineficiente).
#
#   Con pool: Hay 5 bicis disponibles. Los usuarios las toman prestadas, las usan, y las devuelven para que otros las usen.
###########################################################

spring:
  application:
    name: companies-crud

  datasource:
    url: jdbc:postgresql://localhost:5432/companies
    username: jorge
    password: udemy
    hikari:
      maximum-pool-size: 5
      connection-timeout: 20000
      # connection-timeout: Tiempo máximo de espera para obtener una conexión (20 segundos).
      # maximum-pool-size: Número máximo de conexiones activas en el pool

server:
  port: 0
  servlet:
    context-path: /companies-crud

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

###########################################################
# Estas líneas ayudan al desarrollador a ver cómo se comporta
# la base de datos durante el desarrollo.
# No las uses en producción.
###########################################################

eureka:
  instance:
    instance-id: "${spring.application.name}:${random.value}"
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
